import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,d as n}from"./app-jr09F59J.js";const t={},l=n(`<h1 id="git-工作流配置密钥" tabindex="-1"><a class="header-anchor" href="#git-工作流配置密钥"><span>GIT 工作流配置密钥</span></a></h1><h3 id="_1-生成新的个人访问令牌" tabindex="-1"><a class="header-anchor" href="#_1-生成新的个人访问令牌"><span>1. 生成新的个人访问令牌</span></a></h3><ol><li><strong>登录 GitHub</strong>： <ul><li>打开浏览器，登录您的 GitHub 账户。</li></ul></li><li><strong>进入设置</strong>： <ul><li>点击右上角的头像，选择 <code>Settings</code>。</li></ul></li><li><strong>进入开发者设置</strong>： <ul><li>在左侧菜单中，点击 <code>Developer settings</code>。</li></ul></li><li><strong>生成个人访问令牌</strong>： <ul><li>在 <code>Developer settings</code> 页面中，选择 <code>Personal access tokens</code>。</li><li>点击 <code>Tokens (classic)</code> 或 <code>Fine-grained tokens</code>（取决于您的 GitHub 版本）。</li><li>如果您选择Tokens (classic) <ul><li>点击 <code>Generate new token</code>。</li><li>填写一个描述性的 <code>Note</code>，比如 <code>GitHub Actions for Tommya-blog</code>。</li><li>选择适当的权限范围。对于推送代码到仓库，通常需要 <code>repo</code> 权限。</li><li>点击 <code>Generate token</code>。</li></ul></li><li>如果您选择Fine-grained tokens <ul><li>点击 <code>Generate new token</code>。</li><li>选择 <code>Repository access</code> 为 <code>Select repositories</code>，然后选择您的 <code>Tommya-blog</code> 仓库。</li><li>选择所需的权限，至少需要 <code>Contents</code> 和 <code>Workflows</code> 权限。</li><li>点击 <code>Generate token</code>。</li></ul></li></ul></li><li><strong>保存令牌</strong>： <ul><li>生成的令牌会显示在屏幕上，务必将其复制并保存在一个安全的地方。一旦关闭页面，就无法再次查看该令牌。</li></ul></li></ol><h3 id="_2-更新-github-actions-中的-secrets" tabindex="-1"><a class="header-anchor" href="#_2-更新-github-actions-中的-secrets"><span>2. 更新 GitHub Actions 中的 Secrets</span></a></h3><ol><li><strong>进入仓库页面</strong>： <ul><li>打开您的仓库 <code>wuwenlong12/Tommya-blog</code>。</li></ul></li><li><strong>进入仓库 Secrets 设置</strong>： <ul><li>在 顶部<code>找到并点击 </code>Settings\`。</li><li>在 <code>Settings</code> 页面的左侧菜单中，找到并点击 <code>Secrets and variables</code>。</li><li>点击 <code>Actions</code>。</li></ul></li><li><strong>添加或更新 Secret</strong>： <ul><li>如果您已经有一个名为 <code>PERSONAL_ACCESS_TOKEN</code> 的 Secret，点击它并更新其值为新生成的令牌。</li><li>如果没有，点击 <code>New repository secret</code>，输入 <code>PERSONAL_ACCESS_TOKEN</code> 作为名称，将新生成的令牌粘贴到值字段中，然后点击 <code>Add secret</code>。</li></ul></li></ol><h3 id="_3-更新-github-actions-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-更新-github-actions-配置文件"><span>3. 更新 GitHub Actions 配置文件</span></a></h3><p>确保您的 GitHub Actions 配置文件（通常是 <code>.github/workflows</code> 目录下的 YAML 文件）正确引用了 <code>PERSONAL_ACCESS_TOKEN</code>。例如：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deploy to GitHub Pages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  deploy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Checkout code</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">actions/checkout@v3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Build and Deploy</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">crazy-max/ghaction-github-pages@v4</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        target_branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gh-pages</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        build_dir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">src/.vuepress/dist</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        github_token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.PERSONAL_ACCESS_TOKEN }}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-重新运行-github-actions" tabindex="-1"><a class="header-anchor" href="#_4-重新运行-github-actions"><span>4. 重新运行 GitHub Actions</span></a></h3><ol><li>触发新的工作流 <ul><li>您可以通过推送新的提交或手动触发工作流来测试新的令牌是否有效。</li><li>在 GitHub Actions 页面，找到您的工作流，点击 <code>Run workflow</code> 按钮，选择分支并运行。</li></ul></li></ol>`,10),a=[l];function o(c,d){return e(),s("div",null,a)}const p=i(t,[["render",o],["__file","git工作流.html.vue"]]),k=JSON.parse('{"path":"/study/10.git/git%E5%B7%A5%E4%BD%9C%E6%B5%81.html","title":"GIT 工作流配置密钥","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-05-11T00:00:00.000Z","category":["Git"],"tag":["Git","入职"],"description":"GIT 工作流配置密钥 1. 生成新的个人访问令牌 登录 GitHub： 打开浏览器，登录您的 GitHub 账户。 进入设置： 点击右上角的头像，选择 Settings。 进入开发者设置： 在左侧菜单中，点击 Developer settings。 生成个人访问令牌： 在 Developer settings 页面中，选择 Personal acce...","head":[["meta",{"property":"og:url","content":"https://github.com/tommmmya/Tommya-Blog/study/10.git/git%E5%B7%A5%E4%BD%9C%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"Tommya 个人博客"}],["meta",{"property":"og:title","content":"GIT 工作流配置密钥"}],["meta",{"property":"og:description","content":"GIT 工作流配置密钥 1. 生成新的个人访问令牌 登录 GitHub： 打开浏览器，登录您的 GitHub 账户。 进入设置： 点击右上角的头像，选择 Settings。 进入开发者设置： 在左侧菜单中，点击 Developer settings。 生成个人访问令牌： 在 Developer settings 页面中，选择 Personal acce..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T07:56:04.000Z"}],["meta",{"property":"article:author","content":"Mr.Tommya"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"入职"}],["meta",{"property":"article:published_time","content":"2023-05-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-29T07:56:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GIT 工作流配置密钥\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-29T07:56:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Tommya\\",\\"url\\":\\"https://github.com/tommmmya\\"}]}"]]},"headers":[{"level":3,"title":"1. 生成新的个人访问令牌","slug":"_1-生成新的个人访问令牌","link":"#_1-生成新的个人访问令牌","children":[]},{"level":3,"title":"2. 更新 GitHub Actions 中的 Secrets","slug":"_2-更新-github-actions-中的-secrets","link":"#_2-更新-github-actions-中的-secrets","children":[]},{"level":3,"title":"3. 更新 GitHub Actions 配置文件","slug":"_3-更新-github-actions-配置文件","link":"#_3-更新-github-actions-配置文件","children":[]},{"level":3,"title":"4. 重新运行 GitHub Actions","slug":"_4-重新运行-github-actions","link":"#_4-重新运行-github-actions","children":[]}],"git":{"createdTime":1728989573000,"updatedTime":1730188564000,"contributors":[{"name":"tangmao02","email":"tangmao02@meituan.com","commits":2}]},"readingTime":{"minutes":1.85,"words":555},"filePathRelative":"study/10.git/git工作流.md","localizedDate":"2023年5月11日","excerpt":"\\n<h3>1. 生成新的个人访问令牌</h3>\\n<ol>\\n<li><strong>登录 GitHub</strong>：\\n<ul>\\n<li>打开浏览器，登录您的 GitHub 账户。</li>\\n</ul>\\n</li>\\n<li><strong>进入设置</strong>：\\n<ul>\\n<li>点击右上角的头像，选择 <code>Settings</code>。</li>\\n</ul>\\n</li>\\n<li><strong>进入开发者设置</strong>：\\n<ul>\\n<li>在左侧菜单中，点击 <code>Developer settings</code>。</li>\\n</ul>\\n</li>\\n<li><strong>生成个人访问令牌</strong>：\\n<ul>\\n<li>在 <code>Developer settings</code> 页面中，选择 <code>Personal access tokens</code>。</li>\\n<li>点击 <code>Tokens (classic)</code> 或 <code>Fine-grained tokens</code>（取决于您的 GitHub 版本）。</li>\\n<li>如果您选择Tokens (classic)\\n<ul>\\n<li>点击 <code>Generate new token</code>。</li>\\n<li>填写一个描述性的 <code>Note</code>，比如 <code>GitHub Actions for Tommya-blog</code>。</li>\\n<li>选择适当的权限范围。对于推送代码到仓库，通常需要 <code>repo</code> 权限。</li>\\n<li>点击 <code>Generate token</code>。</li>\\n</ul>\\n</li>\\n<li>如果您选择Fine-grained tokens\\n<ul>\\n<li>点击 <code>Generate new token</code>。</li>\\n<li>选择 <code>Repository access</code> 为 <code>Select repositories</code>，然后选择您的 <code>Tommya-blog</code> 仓库。</li>\\n<li>选择所需的权限，至少需要 <code>Contents</code> 和 <code>Workflows</code> 权限。</li>\\n<li>点击 <code>Generate token</code>。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><strong>保存令牌</strong>：\\n<ul>\\n<li>生成的令牌会显示在屏幕上，务必将其复制并保存在一个安全的地方。一旦关闭页面，就无法再次查看该令牌。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{p as comp,k as data};
