import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,d as t}from"./app-jr09F59J.js";const i={},n=t(`<h1 id="懒加载的原理及实现" tabindex="-1"><a class="header-anchor" href="#懒加载的原理及实现"><span>懒加载的原理及实现</span></a></h1><h3 id="一、什么是懒加载" tabindex="-1"><a class="header-anchor" href="#一、什么是懒加载"><span>一、什么是<a href="https://so.csdn.net/so/search?q=%E6%87%92%E5%8A%A0%E8%BD%BD&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">懒加载</a>？</span></a></h3><p>懒加载就是延迟加载。针对多图片的页面，只有当该图片出现在页面视区中，再加载该图片。可以防止页面一次性加载完所有的图片，用户等待时间长，影响用户体验。</p><h3 id="二、如何实现懒加载" tabindex="-1"><a class="header-anchor" href="#二、如何实现懒加载"><span>二、如何实现懒加载</span></a></h3><ol><li>将页面中所有的 src 属性设置为空，并将 src 属性真正的值存放在自定义属性 data-originnal（自定义属性以 data - 开头）。</li><li>为页面中的图片设置好大小，防止引起页面的回流，影响性能。</li><li>判断元素是否进入用户视野中。（利用元素的 offsetTop 属性和 scrollTop、clientTop 之间的关系判断），若进入视野，则将 data-originnal 属性的值赋给图片的 src 属性。</li><li>滚动，重复判断元素是否进入视野。</li></ol><p>三、具体实现<br> 1.html 模块</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;img data-original=&quot;mogu.jpg&quot; alt=&quot;&quot; class=&quot;picture&quot; src=&quot;&quot;  &gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>判断元素是否进入视野</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>if(scrollTop+height&gt;offsetTop){</span></span>
<span class="line"><span>	var img= new Image();//跨域异步请求图片</span></span>
<span class="line"><span>	img.onload=function(){</span></span>
<span class="line"><span>		console.log(1);</span></span>
<span class="line"><span>		item.src=img.src;</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>	img.src=item.data-originnal</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>四、完整代码图片描述</p><p><img src="https://img-blog.csdnimg.cn/20190626184725575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70" alt="" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20190626184733631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70" alt="" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/20190626185802999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70" alt="" loading="lazy"></p><h3 id="五、代码的其他问题" tabindex="-1"><a class="header-anchor" href="#五、代码的其他问题"><span>五、代码的其他问题</span></a></h3><p>判断元素是否在可视区域时，会重复判断元素，造成浪费</p><h3 id="六、使用-echo-js-库实现预加载" tabindex="-1"><a class="header-anchor" href="#六、使用-echo-js-库实现预加载"><span>六、使用 echo.js 库实现预加载</span></a></h3><p>echo.js 使用原生 js 编写，不需要依赖其他库，可以独立使用。（lazyload 是 jQuery 插件，使用时必须引入 jquery）</p><ol><li>引入 js</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;script src=&quot;https://cdn.bootcss.com/echo.js/1.7.3/echo.js&quot;&gt;&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>设置图片的自定义属性为 data-echo</li><li>使用: 获取元素并调用 init() 方法，接收一个对象，对象参数如下<br> offset：图片在可视区域下方一段距离时，开始加载。<br> throttle：图片延迟多少秒后加载<br> unload：是否卸载在可视区域外面的图片，默认为 false。</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>echo.init({</span></span>
<span class="line"><span>	offset:0;</span></span>
<span class="line"><span>	throttle:0;</span></span>
<span class="line"><span>	unload:true;</span></span>
<span class="line"><span>	callback:function(element,top){</span></span>
<span class="line"><span>		</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),l=[n];function r(o,p){return s(),a("div",null,l)}const m=e(i,[["render",r],["__file","懒加载的原理及实现.html.vue"]]),h=JSON.parse('{"path":"/study/2.%E6%B7%B1%E5%85%A5%E5%BF%85%E5%A4%87/%E6%87%92%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0.html","title":"懒加载的原理及实现","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-08-20T00:00:00.000Z","category":["面试"],"tag":["懒加载","性能优化"],"description":"懒加载的原理及实现 一、什么是懒加载？ 懒加载就是延迟加载。针对多图片的页面，只有当该图片出现在页面视区中，再加载该图片。可以防止页面一次性加载完所有的图片，用户等待时间长，影响用户体验。 二、如何实现懒加载 将页面中所有的 src 属性设置为空，并将 src 属性真正的值存放在自定义属性 data-originnal（自定义属性以 data - 开头...","head":[["meta",{"property":"og:url","content":"https://github.com/tommmmya/Tommya-Blog/study/2.%E6%B7%B1%E5%85%A5%E5%BF%85%E5%A4%87/%E6%87%92%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8E%9F%E7%90%86%E5%8F%8A%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"Tommya 个人博客"}],["meta",{"property":"og:title","content":"懒加载的原理及实现"}],["meta",{"property":"og:description","content":"懒加载的原理及实现 一、什么是懒加载？ 懒加载就是延迟加载。针对多图片的页面，只有当该图片出现在页面视区中，再加载该图片。可以防止页面一次性加载完所有的图片，用户等待时间长，影响用户体验。 二、如何实现懒加载 将页面中所有的 src 属性设置为空，并将 src 属性真正的值存放在自定义属性 data-originnal（自定义属性以 data - 开头..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img-blog.csdnimg.cn/20190626184725575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T07:56:04.000Z"}],["meta",{"property":"article:author","content":"Mr.Tommya"}],["meta",{"property":"article:tag","content":"懒加载"}],["meta",{"property":"article:tag","content":"性能优化"}],["meta",{"property":"article:published_time","content":"2023-08-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-29T07:56:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"懒加载的原理及实现\\",\\"image\\":[\\"https://img-blog.csdnimg.cn/20190626184725575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70\\",\\"https://img-blog.csdnimg.cn/20190626184733631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70\\",\\"https://img-blog.csdnimg.cn/20190626185802999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgxNTc1Ng==,size_16,color_FFFFFF,t_70\\"],\\"datePublished\\":\\"2023-08-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-29T07:56:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Tommya\\",\\"url\\":\\"https://github.com/tommmmya\\"}]}"]]},"headers":[{"level":3,"title":"一、什么是懒加载？","slug":"一、什么是懒加载","link":"#一、什么是懒加载","children":[]},{"level":3,"title":"二、如何实现懒加载","slug":"二、如何实现懒加载","link":"#二、如何实现懒加载","children":[]},{"level":3,"title":"五、代码的其他问题","slug":"五、代码的其他问题","link":"#五、代码的其他问题","children":[]},{"level":3,"title":"六、使用 echo.js 库实现预加载","slug":"六、使用-echo-js-库实现预加载","link":"#六、使用-echo-js-库实现预加载","children":[]}],"git":{"createdTime":1728989573000,"updatedTime":1730188564000,"contributors":[{"name":"tangmao02","email":"tangmao02@meituan.com","commits":2}]},"readingTime":{"minutes":1.82,"words":546},"filePathRelative":"study/2.深入必备/懒加载的原理及实现.md","localizedDate":"2023年8月20日","excerpt":"\\n<h3><a class=\\"header-anchor\\" href=\\"#一、什么是懒加载\\"><span>一、什么是</span></a><a href=\\"https://so.csdn.net/so/search?q=%E6%87%92%E5%8A%A0%E8%BD%BD&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">懒加载</a>？</h3>\\n<p>懒加载就是延迟加载。针对多图片的页面，只有当该图片出现在页面视区中，再加载该图片。可以防止页面一次性加载完所有的图片，用户等待时间长，影响用户体验。</p>","autoDesc":true}');export{m as comp,h as data};
