import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,d as n}from"./app-jr09F59J.js";const o={},s=n(`<h1 id="暂时性死区" tabindex="-1"><a class="header-anchor" href="#暂时性死区"><span>暂时性死区</span></a></h1><ul><li><p>定义：<code>let/const</code> 命令会使区块形成封闭的作用域。若在声明之前使用变量，就会报错。总之，在代码块内，使用 <code>let</code> <em><strong>命令声明变量之前，该变量都是不可用的</strong></em>。这在语法上，称为 <strong>“暂时性死区”</strong></p></li><li><p>现象：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>console.log(a) // ReferenceError: a is not defined</span></span>
<span class="line"><span>let a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="浅谈-let-const-var-关于暂时性死区" tabindex="-1"><a class="header-anchor" href="#浅谈-let-const-var-关于暂时性死区"><span>浅谈 let，const，var 关于暂时性死区：</span></a></h3><ul><li>var 不存在暂时性死区，而 let，const 存在，所以 let，const 在变量声明之前就访问变量的话，会直接提示 <code>ReferenceError</code>，而不像 var 那样使用默认值 <code>undefined</code></li><li>reason：</li></ul><blockquote><p><code>var</code> 声明的变量可以重复声明, 没有块的概念, 可以跨块访问, 不能跨函数访问, 当出现相同的变量名时, 后者会覆盖前者</p><p><code>let</code>,<code>const</code>有块级作用域（花括号内）, 并且不可重复声明 (不存在<a href="https://so.csdn.net/so/search?q=%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">变量提升</a>，所以用 <code>let，const</code>定义的变量一定要在声明后再使用，否则会报错)</p></blockquote>`,5),i=[s];function r(c,l){return a(),t("div",null,i)}const m=e(o,[["render",r],["__file","暂时性死区.html.vue"]]),h=JSON.parse('{"path":"/study/7.Javascript/%E6%9A%82%E6%97%B6%E6%80%A7%E6%AD%BB%E5%8C%BA.html","title":"暂时性死区","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-02-08T00:00:00.000Z","category":["JavaScript"],"tag":["JavaScript","暂时性死区"],"description":"暂时性死区 定义：let/const 命令会使区块形成封闭的作用域。若在声明之前使用变量，就会报错。总之，在代码块内，使用 let 命令声明变量之前，该变量都是不可用的。这在语法上，称为 “暂时性死区” 现象： 浅谈 let，const，var 关于暂时性死区： var 不存在暂时性死区，而 let，const 存在，所以 let，const 在变量声...","head":[["meta",{"property":"og:url","content":"https://github.com/tommmmya/Tommya-Blog/study/7.Javascript/%E6%9A%82%E6%97%B6%E6%80%A7%E6%AD%BB%E5%8C%BA.html"}],["meta",{"property":"og:site_name","content":"Tommya 个人博客"}],["meta",{"property":"og:title","content":"暂时性死区"}],["meta",{"property":"og:description","content":"暂时性死区 定义：let/const 命令会使区块形成封闭的作用域。若在声明之前使用变量，就会报错。总之，在代码块内，使用 let 命令声明变量之前，该变量都是不可用的。这在语法上，称为 “暂时性死区” 现象： 浅谈 let，const，var 关于暂时性死区： var 不存在暂时性死区，而 let，const 存在，所以 let，const 在变量声..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-29T07:56:04.000Z"}],["meta",{"property":"article:author","content":"Mr.Tommya"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"暂时性死区"}],["meta",{"property":"article:published_time","content":"2024-02-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-29T07:56:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"暂时性死区\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-29T07:56:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Tommya\\",\\"url\\":\\"https://github.com/tommmmya\\"}]}"]]},"headers":[{"level":3,"title":"浅谈 let，const，var 关于暂时性死区：","slug":"浅谈-let-const-var-关于暂时性死区","link":"#浅谈-let-const-var-关于暂时性死区","children":[]}],"git":{"createdTime":1728989573000,"updatedTime":1730188564000,"contributors":[{"name":"tangmao02","email":"tangmao02@meituan.com","commits":2}]},"readingTime":{"minutes":0.95,"words":286},"filePathRelative":"study/7.Javascript/暂时性死区.md","localizedDate":"2024年2月8日","excerpt":"\\n<ul>\\n<li>\\n<p>定义：<code>let/const</code>&nbsp;命令会使区块形成封闭的作用域。若在声明之前使用变量，就会报错。总之，在代码块内，使用&nbsp;<code>let</code>&nbsp;<em><strong>命令声明变量之前，该变量都是不可用的</strong></em>。这在语法上，称为&nbsp;<strong>“暂时性死区”</strong></p>\\n</li>\\n<li>\\n<p>现象：</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>console.log(a) // ReferenceError: a is not defined</span></span>\\n<span class=\\"line\\"><span>let a</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{m as comp,h as data};
